{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/minakhan/git/PAL_2021/PAL_Stroop/Visualization_app/src/components/Games/fruit_ninja/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport ScriptTag from 'react-script-tag';\nimport InnerHTML from 'dangerously-set-html-content';\n\nfunction FruitNinja(props) {\n  _s();\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = \"scripts/all.js\";\n    script.async = true;\n    document.body.appendChild(script); // Select the node that will be observed for mutations\n\n    const targetNode = document.getElementById('fruit_ninja_score'); // Options for the observer (which mutations to observe)\n\n    const config = {\n      attributes: true,\n      childList: true,\n      subtree: true\n    }; // Callback function to execute when mutations are observed\n\n    const callback = function (mutationsList, observer) {\n      // Use traditional 'for loops' for IE 11\n      for (const mutation of mutationsList) {\n        if (mutation.type === 'childList') {\n          console.log('okay we are printing ' + targetNode.innerHTML);\n          props.onComplete(parseInt(targetNode.innerHTML));\n        }\n      }\n    }; // Create an observer instance linked to the callback function\n\n\n    const observer = new MutationObserver(callback); // Start observing the target node for configured mutations\n\n    observer.observe(targetNode, config);\n    return () => {\n      // Later, you can stop observing\n      observer.disconnect();\n      document.body.removeChild(script);\n    };\n  }, []); //var __html = require('./index.html');\n  //var tmp = '<body><canvas id=\"view\" width=\"640\" height=\"480\"></canvas><script src=\"scripts/all.js\"></script></body>'\n  //var tmp = '<canvas id=\"view\" width=\"640\" height=\"480\"></canvas><script src=\"scripts / all.js\"></script>'\n  //var tmp = '<div id=\"extra\"></div><canvas id=\"view\" width=\"640\" height=\"480\"></canvas><div id=\"desc\"><div id=\"browser\"></div></div ><script src=\"scripts/all.js\"></script>'\n  //var template = { __html: tmp };\n  //return <InnerHTML html={tmp} />\n  //return <><div id=\"extra\" width=\"640\" height=\"480\"></div><canvas id=\"view\" width=\"640\" height=\"480\"></canvas><div id=\"desc\"><div id=\"browser\"></div></div ></>\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"fruit_ninja_container_container\",\n    style: {\n      height: '100%',\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"fruit_ninja_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"fruit_ninja_extra\",\n        width: \"640\",\n        height: \"480\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"fruit_ninja_view\",\n        width: \"640\",\n        height: \"480\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"fruit_ninja_desc\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"fruit_ninja_score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"fruit_ninja_browser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"fruit_ninja_bombprob_inverse\",\n          style: {\n            display: 'none'\n          },\n          children: props.bpi || 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 12\n  }, this);\n}\n\n_s(FruitNinja, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = FruitNinja;\nexport default FruitNinja;\n\nvar _c;\n\n$RefreshReg$(_c, \"FruitNinja\");","map":{"version":3,"sources":["/Users/minakhan/git/PAL_2021/PAL_Stroop/Visualization_app/src/components/Games/fruit_ninja/index.jsx"],"names":["React","useEffect","ScriptTag","InnerHTML","FruitNinja","props","script","document","createElement","src","async","body","appendChild","targetNode","getElementById","config","attributes","childList","subtree","callback","mutationsList","observer","mutation","type","console","log","innerHTML","onComplete","parseInt","MutationObserver","observe","disconnect","removeChild","height","width","display","justifyContent","bpi"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport ScriptTag from 'react-script-tag';\nimport InnerHTML from 'dangerously-set-html-content'\n\nfunction FruitNinja(props) {\n\n    useEffect(() => {\n        const script = document.createElement('script');\n\n        script.src = \"scripts/all.js\";\n        script.async = true;\n\n        document.body.appendChild(script);\n\n\n\n        // Select the node that will be observed for mutations\n        const targetNode = document.getElementById('fruit_ninja_score')\n\n        // Options for the observer (which mutations to observe)\n        const config = { attributes: true, childList: true, subtree: true };\n\n        // Callback function to execute when mutations are observed\n        const callback = function (mutationsList, observer) {\n            // Use traditional 'for loops' for IE 11\n            for (const mutation of mutationsList) {\n                if (mutation.type === 'childList') {\n                    console.log('okay we are printing ' + targetNode.innerHTML)\n                    props.onComplete(parseInt(targetNode.innerHTML))\n                }\n            }\n        };\n\n        // Create an observer instance linked to the callback function\n        const observer = new MutationObserver(callback);\n\n        // Start observing the target node for configured mutations\n        observer.observe(targetNode, config);\n\n        return () => {\n            // Later, you can stop observing\n            observer.disconnect();\n\n            document.body.removeChild(script);\n        }\n    }, []);\n\n    //var __html = require('./index.html');\n\n    //var tmp = '<body><canvas id=\"view\" width=\"640\" height=\"480\"></canvas><script src=\"scripts/all.js\"></script></body>'\n    //var tmp = '<canvas id=\"view\" width=\"640\" height=\"480\"></canvas><script src=\"scripts / all.js\"></script>'\n    //var tmp = '<div id=\"extra\"></div><canvas id=\"view\" width=\"640\" height=\"480\"></canvas><div id=\"desc\"><div id=\"browser\"></div></div ><script src=\"scripts/all.js\"></script>'\n    //var template = { __html: tmp };\n    //return <InnerHTML html={tmp} />\n    //return <><div id=\"extra\" width=\"640\" height=\"480\"></div><canvas id=\"view\" width=\"640\" height=\"480\"></canvas><div id=\"desc\"><div id=\"browser\"></div></div ></>\n\n    return <div id='fruit_ninja_container_container' style={{ height: '100%', width: '100%', display: 'flex', justifyContent: 'center' }}>\n    <span id='fruit_ninja_container'>\n        <div id=\"fruit_ninja_extra\" width=\"640\" height=\"480\"></div>\n        <canvas id=\"fruit_ninja_view\" width=\"640\" height=\"480\"></canvas>\n        <div id=\"fruit_ninja_desc\">\n\t        <div id='fruit_ninja_score'></div>\n                <div id=\"fruit_ninja_browser\"></div>\n                <div id='fruit_ninja_bombprob_inverse' style={{display:'none'}}>{props.bpi||8}</div>\n           </div>\n        </span >\n        </div>\n\n}\n\nexport default FruitNinja;\n"]},"metadata":{},"sourceType":"module"}