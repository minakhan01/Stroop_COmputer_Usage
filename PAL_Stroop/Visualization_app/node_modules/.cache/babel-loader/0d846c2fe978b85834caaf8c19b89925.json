{"ast":null,"code":"import { UserdataTypes } from \"../types\";\nconst initialState = {\n  uid: '',\n  uname: '',\n  did: '',\n  pastQueue: []\n};\n\nconst UserdataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UserdataTypes.SET_USER_DATA:\n      return { ...state,\n        ...action.payload\n      };\n\n    case UserdataTypes.QUEUE_USER_DATA:\n      return { ...state,\n        pastQueue: [...state.pastQueue, action.payload]\n      };\n\n    case UserdataTypes.DEQUEUE_USER_DATA:\n      var a = state.pastQueue.filter(el => {\n        return !(el.time === action.payload.time);\n      });\n      return { ...state,\n        pastQueue: a\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = UserdataReducer;\nexport default UserdataReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserdataReducer\");","map":{"version":3,"sources":["/Users/minakhan/git/PAL_2021/PAL_Stroop/Visualization_app/src/redux/reducers/userdata.reducer.js"],"names":["UserdataTypes","initialState","uid","uname","did","pastQueue","UserdataReducer","state","action","type","SET_USER_DATA","payload","QUEUE_USER_DATA","DEQUEUE_USER_DATA","a","filter","el","time"],"mappings":"AAAA,SAASA,aAAT,QAA8B,UAA9B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,GAAG,EAAE,EADY;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,GAAG,EAAE,EAHY;AAIjBC,EAAAA,SAAS,EAAE;AAJM,CAArB;;AAOA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAa,CAACU,aAAnB;AACI,aAAO,EAAE,GAAGH,KAAL;AAAY,WAAGC,MAAM,CAACG;AAAtB,OAAP;;AACJ,SAAKX,aAAa,CAACY,eAAnB;AACI,aAAO,EAAE,GAAGL,KAAL;AAAYF,QAAAA,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACF,SAAV,EAAqBG,MAAM,CAACG,OAA5B;AAAvB,OAAP;;AACJ,SAAKX,aAAa,CAACa,iBAAnB;AACI,UAAIC,CAAC,GAACP,KAAK,CAACF,SAAN,CAAgBU,MAAhB,CAAuBC,EAAE,IAAI;AAC/B,eAAO,EAAEA,EAAE,CAACC,IAAH,KAAYT,MAAM,CAACG,OAAP,CAAeM,IAA7B,CAAP;AACH,OAFK,CAAN;AAGA,aAAO,EAAE,GAAGV,KAAL;AAAYF,QAAAA,SAAS,EAAES;AAAvB,OAAP;;AACJ;AACI,aAAOP,KAAP;AAXR;AAaH,CAdD;;KAAMD,e;AAiBN,eAAeA,eAAf","sourcesContent":["import { UserdataTypes } from \"../types\";\nconst initialState = {\n    uid: '',\n    uname: '',\n    did: '',\n    pastQueue: [],\n};\n\nconst UserdataReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UserdataTypes.SET_USER_DATA:\n            return { ...state, ...action.payload };\n        case UserdataTypes.QUEUE_USER_DATA:\n            return { ...state, pastQueue: [...state.pastQueue, action.payload] };\n        case UserdataTypes.DEQUEUE_USER_DATA:\n            var a=state.pastQueue.filter(el => {\n                return !(el.time === action.payload.time)\n            })\n            return { ...state, pastQueue: a };\n        default:\n            return state;\n    }\n};\n\n\nexport default UserdataReducer;\n"]},"metadata":{},"sourceType":"module"}